using System.Globalization;
using System.Text;
using System.Text.RegularExpressions;
using KeyControl2.Configuration;
using KeyControl2.Util;
using PlayifyUtility.Jsons;
using PlayifyUtility.Utils.Extensions;

namespace KeyControl2.Features.Strings.HotStrings.Complex;

[InitOnLoad]
public class HotStringComplexFlip:HotStringInternal{
	private static readonly Regex Regex=new("@flip ?(.*?)[\t\n]$",RegexOptions.IgnoreCase);

	private static readonly string[] Conversion={
		"a","…ê",
		"b","q",
		"c","…î",
		"d","p",
		"e","«ù",
		"f","…ü",
		"g","∆É",
		"h","…•",
		"i","·¥â",
		"j","…æ",
		"k"," û",
		"l","l",
		"m","…Ø",
		"n","u",
		"o","o",
		"p","d",
		"q","b",
		"r","…π",
		"s","s",
		"t"," á",
		"u","n",
		"v"," å",
		"w"," ç",
		"x","x",
		"y"," é",
		"z","z",
		
		"A","‚±Ø",
		"B","Íì≠",
		"C","∆Ü",
		"D","Íì∑",
		"E","∆é",
		"F","‚Ñ≤",
		"G","‚ÖÅ",
		"H","H",
		"I","I",
		"J","Íì©",
		"K","Íìò",
		"L","‚ÖÇ",
		"M","ÍüΩ",
		"N","N",
		"O","O",
		"P","‘Ä",
		"Q","Íùπ",
		"R","Íì§",
		"S","S",
		"T","Íû±",
		"U","’à",
		"V","…Ö",
		"W","M",
		"X","X",
		"Y","‚ÖÑ",
		"Z","Z",
		
		"1","‚áÇ",
		"2","‚Üä",
		"3","‚Üã",
		"4","„Ñ£",
		"5","·Äå",
		"6","9",
		"7","ùòì",
		"8","8",
		"9","6",
		"0","0",
		
		".","Àô",
		",","'",
		"\"",",,",
		"?","¬ø",
		"!","¬°",
		"[","]",
		"(",")",
		"{","}",
		"<",">",
		"&","‚Öã",
		"_","‚Äæ",
		"‚à¥","‚àµ",
		"‚ÅÖ","‚ÅÜ",
		";","ÿõ",

		"√ü","·ô†",

		"√§","…êÃ§",
		"√∂","oÃ§",
		"√º","nÃ§",
		"√Ñ","‚àÄÃ§",
		"√ñ","OÃ§",
		"√ú","‚à©Ã§",

		"^","‚åÑ",
		"√¢","…êÃÆ",
		"√™","«ùÃÆ",
		"√Æ","·¥âÃÆ",
		"√¥","oÃÆ",
		"√ª","nÃÆ",
		"√Ç","‚àÄÃÆ",
		"√ä","∆éÃÆ",
		"√é","IÃÆ",
		"√î","OÃÆ",
		"√õ","‚à©ÃÆ",

		"`"," Ãñ",
		"√†","…êÃñ",
		"√®","«ùÃñ",
		"√¨","√¨",
		"√≤","oÃñ",
		"√π","nÃñ",
		"√Ä","‚àÄÃñ",
		"√à","∆éÃñ",
		"√å","√å",
		"√í","OÃñ",
		"√ô","‚à©Ãñ",

		"¬¥"," Ãó",
		"√°","…êÃó",
		"√©","«ùÃó",
		"√≠","√≠",
		"√≥","oÃó",
		"√∫","nÃó",
		"√Å","‚àÄÃó",
		"√â","∆éÃó",
		"√ç","√ç",
		"√ì","OÃó",
		"√ö","‚à©Ãó",

		"üôÉ","üôÇ",
		"üëç","üëé",
		"üëÜ","üëá",
	};

	static HotStringComplexFlip(){
		ConfigServer.Register((ws,json)=>{
			var s=json.AsString();
			ws.Send(new JsonArray("Internal","Flip","A",s).ToString());
			ws.Send(new JsonArray("Internal","Flip","B",Flip(s)).ToString());
		},"Internal","Flip","A");
		ConfigServer.Register((ws,json)=>{
			var s=json.AsString();
			ws.Send(new JsonArray("Internal","Flip","B",s).ToString());
			ws.Send(new JsonArray("Internal","Flip","A",Flip(s)).ToString());
		},"Internal","Flip","B");
	}


	public override (int bs,string s)? Replace(string s){
		if(Regex.Match(s).Push(out var match).Success) return (match.Length,Flip(match.Groups[1].Value));
		return null;
	}

	public static string Flip(string s){
		var enumerator=StringInfo.GetTextElementEnumerator(s);
		var str=new StringBuilder();
		while(enumerator.MoveNext()){
			var element=enumerator.GetTextElement();
			str.Insert(0,FlipSingle(element));
		}
		return str.ToString();
	}

	private static string FlipSingle(string s){
		for(var i=0;i<Conversion.Length;i+=2){
			if(s.Equals(Conversion[i])) return Conversion[i+1];
			if(s.Equals(Conversion[i+1])) return Conversion[i];
		}
		return s;
	}
}